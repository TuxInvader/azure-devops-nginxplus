# Install and/or upgrade NGINX Plus in the Specificied environment

variables:

  # Environment name and tags
  ADO_ENV: $(azureDevOpsEnvironment)
  ADO_TAG: $(azureDevOpsTag)

  # Install NGINX App Protect (true or false)?
  NAP: $(nginxAP)

  # NGINX Plus repo Cert and Key (base64 encoded)
  NGINX_REPO_KEY: $(nginxRepoKey)
  NGINX_REPO_CRT: $(nginxRepoCrt)

  # Is this system `debian` or `ubuntu`
  APT_SYSTEM: ubuntu

  # Register with NGINX Controller (true or false)?
  CTRL_REG: $(controllerRegister)

  # API endpoint of controller eg https://mycontroller.cloud.net
  CTRL_URI: $(controllerUri)
  # Verify Controller certificate (true or false)?
  CTRL_VERIFY: $(controllerVerify)
  # API Key needed to register new NGINX agents
  CTRL_API_KEY: $(controllerApiKey)

  # The location to register the NGINX agent.
  AGENT_LOC: $(agentLocation)
  # Enable Agent Beta features (true or false)?
  AGENT_BETA: $(agentBeta)

trigger:
- none

jobs: 
- deployment: NGNIXDeploy
  displayName: NGINX Plus Deployment
  environment:
    name: $(ADO_ENV)
    resourceType: VirtualMachine
  strategy:
      rolling:
        maxParallel: 2
        deploy:

          steps:
          - task: Bash@3
            displayName: Setup NGINX Plus repository certs
            inputs:
              targetType: 'inline'
              script: |
                if [ ! -d '/etc/ssl/nginx' ]
                then
                  sudo mkdir -p /etc/ssl/nginx
                fi
                echo $(NGINX_REPO_KEY) | base64 -d | sudo tee /etc/ssl/nginx/nginx-repo.key
                echo $(NGINX_REPO_CRT) | base64 -d | sudo tee /etc/ssl/nginx/nginx-repo.crt

          - task: Bash@3
            displayName: Setup Apt
            inputs:
              targetType: 'inline'
              script: |
                export DEBIAN_FRONTEND=noninteractive
                sudo -E apt-get install -y apt-transport-https lsb-release ca-certificates
                sudo wget http://nginx.org/keys/nginx_signing.key && sudo apt-key add nginx_signing.key
                printf "deb https://plus-pkgs.nginx.com/$(APT_SYSTEM) `lsb_release -cs` nginx-plus\n" | sudo tee /etc/apt/sources.list.d/nginx-plus.list
                [ -f /etc/apt/apt.conf.d/90nginx ] || sudo wget -P /etc/apt/apt.conf.d https://cs.nginx.com/static/files/90nginx

          - task: Bash@3
            displayName: Install NGINX Plus
            inputs:
              targetType: 'inline'
              script: |
                export DEBIAN_FRONTEND=noninteractive
                sudo -E apt-get update
                dpkg -l | grep nginx-plus
                if [ $? != 0 ]
                then
                  sudo -E apt-get -y install nginx-plus
                  RESTART_NGINX=true
                fi
                dpkg -l | grep app-protect
                if [ $? != 0 ]
                then
                  if [ "$(NAP)" == "true" ]
                  then
                    sudo -E apt-get install -y app-protect
                    RESTART_NGINX=true
                  fi
                fi
                [ "${RESTART_NGINX}" == "true" ] && sudo systemctl restart nginx
                exit 0
          
          - task: Bash@3
            displayName: Install and Register Agent
            inputs:
              targetType: inline
              script: |
                [ "$(CTRL_REG)" != "true" ] && echo "Skipped" && exit 0
                AGENT_CONF=/etc/controller-agent/agent.conf
                if [ ! -f "${AGENT_CONF}" ]
                then
                  curl -k -sS -L $(CTRL_URI):8443/1.4/install/controller/ > install.sh
                  if [ "$(CTRL_VERIFY)" == "false" ]
                  then
                    sed -i -re 's/VERIFY_CERT="True"/VERIFY_CERT="False"/' install.sh
                  fi
                  API_KEY=$(CTRL_API_KEY) sh ./install.sh -l $(AGENT_LOC) -i `hostname -s`
                fi
                if [ "$(AGENT_BETA)" == "true" ]
                then
                  sudo grep -Fxq "beta = True" ${AGENT_CONF}
                  if [ $? != 0 ]
                  then
                    sudo sed "/\[extensions\]/a beta = True" ${AGENT_CONF} -i
                  fi
                fi
                sudo systemctl restart controller-agent
        on:
          failure:
            steps:
            - script: echo Restore from backup! This is on failure
          success:
            steps:
            - script: echo Notify! This is on success
